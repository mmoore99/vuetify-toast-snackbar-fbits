{"version":3,"file":"index.umd.min.js","sources":["../node_modules/style-inject/dist/style-inject.es.js","../node_modules/vue-runtime-helpers/dist/normalize-component.js","../src/index.js"],"sourcesContent":["function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","'use strict';\n\nfunction normalizeComponent(template, style, script, scopeId, isFunctionalTemplate, moduleIdentifier\n/* server only */\n, shadowMode, createInjector, createInjectorSSR, createInjectorShadow) {\n  if (typeof shadowMode !== 'boolean') {\n    createInjectorSSR = createInjector;\n    createInjector = shadowMode;\n    shadowMode = false;\n  } // Vue.extend constructor export interop.\n\n\n  var options = typeof script === 'function' ? script.options : script; // render functions\n\n  if (template && template.render) {\n    options.render = template.render;\n    options.staticRenderFns = template.staticRenderFns;\n    options._compiled = true; // functional template\n\n    if (isFunctionalTemplate) {\n      options.functional = true;\n    }\n  } // scopedId\n\n\n  if (scopeId) {\n    options._scopeId = scopeId;\n  }\n\n  var hook;\n\n  if (moduleIdentifier) {\n    // server build\n    hook = function hook(context) {\n      // 2.3 injection\n      context = context || // cached call\n      this.$vnode && this.$vnode.ssrContext || // stateful\n      this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext; // functional\n      // 2.2 with runInNewContext: true\n\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__;\n      } // inject component styles\n\n\n      if (style) {\n        style.call(this, createInjectorSSR(context));\n      } // register component module identifier for async chunk inference\n\n\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier);\n      }\n    }; // used by ssr in case component is cached and beforeCreate\n    // never gets called\n\n\n    options._ssrRegister = hook;\n  } else if (style) {\n    hook = shadowMode ? function () {\n      style.call(this, createInjectorShadow(this.$root.$options.shadowRoot));\n    } : function (context) {\n      style.call(this, createInjector(context));\n    };\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // register for functional component in vue file\n      var originalRender = options.render;\n\n      options.render = function renderWithStyleInjection(h, context) {\n        hook.call(context);\n        return originalRender(h, context);\n      };\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate;\n      options.beforeCreate = existing ? [].concat(existing, hook) : [hook];\n    }\n  }\n\n  return script;\n}\n\nmodule.exports = normalizeComponent;\n//# sourceMappingURL=normalize-component.js.map\n","import Vue from 'vue'\r\nimport Toast from './Toast.vue'\r\nimport Vuetify from 'vuetify/lib'\r\nconst ToastConstructor = Vue.extend(Toast)\r\n\r\nfunction install(Vue, globalOptions = {}) {\r\n  let cmp = null\r\n  const queue = []\r\n  const property = globalOptions.property || '$toast'\r\n\r\n  function createCmp(options) {\r\n    const component = new ToastConstructor()\r\n    const vuetifyObj = new Vuetify()\r\n    component.$vuetify = vuetifyObj.framework\r\n    const componentOptions = { ...Vue.prototype[property].globalOptions, ...options }\r\n\r\n    if (componentOptions.slot) {\r\n      component.$slots.default = componentOptions.slot\r\n      delete componentOptions.slot\r\n    }\r\n\r\n    Object.assign(component, componentOptions)\r\n    document.body.appendChild(component.$mount().$el)\r\n\r\n    return component\r\n  }\r\n\r\n  function show(message, options = {}) {\r\n    if (cmp) {\r\n      const isQueueable = options.queueable !== undefined ? options.queueable : globalOptions.queueable\r\n\r\n      if (isQueueable) {\r\n        queue.push({ message, options })\r\n      }\r\n      else {\r\n        cmp.close()\r\n        queue.unshift({ message, options })\r\n      }\r\n\r\n      return\r\n    }\r\n\r\n    options.message = message\r\n    cmp = createCmp(options)\r\n    cmp.$on('statusChange', (isActive, wasActive) => {\r\n      if (wasActive && !isActive) {\r\n        cmp.$nextTick(() => {\r\n          cmp.$destroy()\r\n          cmp.$el.parentNode.removeChild(cmp.$el)\r\n          cmp = null\r\n\r\n          if (queue.length) {\r\n            const toast = queue.shift()\r\n            show(toast.message, toast.options)\r\n          }\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  function shorts(options) {\r\n    const colors = ['success', 'info', 'error', 'warning']\r\n    const methods = {}\r\n\r\n    colors.forEach(color => {\r\n      methods[color] = (message, options) => show(message, { color, ...options })\r\n    })\r\n\r\n    if (options.shorts) {\r\n      for (let key in options.shorts) {\r\n        const localOptions = options.shorts[key]\r\n        methods[key] = (message, options) => show(message, { ...localOptions, ...options })\r\n      }\r\n    }\r\n\r\n    return methods\r\n  }\r\n\r\n  function getCmp() {\r\n    return cmp\r\n  }\r\n\r\n  function clearQueue() {\r\n    return queue.splice(0, queue.length)\r\n  }\r\n\r\n  Vue.prototype[property] = Object.assign(show, {\r\n    globalOptions,\r\n    getCmp,\r\n    clearQueue,\r\n    ...shorts(globalOptions)\r\n  })\r\n}\r\n\r\nfunction ToastSnackbar() {\r\n\r\n}\r\nToastSnackbar.install = install\r\n\r\n\r\nexport default ToastSnackbar\r\n"],"names":["css","ref","insertAt","document","head","getElementsByTagName","style","createElement","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","template","script","scopeId","isFunctionalTemplate","moduleIdentifier","shadowMode","createInjector","createInjectorSSR","createInjectorShadow","hook","options","render","staticRenderFns","_compiled","functional","_scopeId","context","this","$vnode","ssrContext","parent","__VUE_SSR_CONTEXT__","call","_registeredComponents","add","_ssrRegister","$root","$options","shadowRoot","originalRender","h","existing","beforeCreate","concat","ToastConstructor","Vue","extend","Toast","ToastSnackbar","install","globalOptions","cmp","queue","property","createCmp","component","vuetifyObj","Vuetify","$vuetify","framework","componentOptions","prototype","slot","$slots","Object","assign","body","$mount","$el","show","message","isQueueable","undefined","queueable","push","close","unshift","$on","isActive","wasActive","$nextTick","$destroy","parentNode","removeChild","length","toast","shift","shorts","methods","forEach","color","key","localOptions","getCmp","clearQueue","splice"],"mappings":"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"}